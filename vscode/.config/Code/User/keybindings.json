// Place your key bindings in this file to override the defaults
// // Place your key bindings in this file to override the defaults
// [
//   {
//     "key": "ctrl+shift+[Backquote]",
//     "command": "workbench.action.terminal.toggleTerminal"
//   },
//   {
//     "key": "ctrl+shift+[BracketRight]",
//     "command": "workbench.action.terminal.new",
//     "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
//   },
//   {
//     "key": "ctrl+shift+[Backquote]",
//     "command": "-workbench.action.terminal.new",
//     "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
//   },
//   {
//     "key": "ctrl+[BracketRight]",
//     "command": "workbench.action.quickOpen"
//   },
//   {
//     "key": "ctrl+p",
//     "command": "-workbench.action.quickOpen"
//   }
// ]
// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+shift+8",
    "command": "workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "alt+meta+8",
    "command": "-workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "ctrl+shift+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "alt+meta+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "meta+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "meta+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "meta+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "meta+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "ctrl+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "meta+5",
    "command": "-workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "meta+6",
    "command": "-workbench.action.openEditorAtIndex6"
  },
  {
    "key": "ctrl+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "meta+7",
    "command": "-workbench.action.openEditorAtIndex7"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "meta+8",
    "command": "-workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "meta+9",
    "command": "-workbench.action.openEditorAtIndex9"
  },
  {
    "key": "ctrl+shift+3",
    "command": "workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "alt+meta+3",
    "command": "-workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "ctrl+shift+6",
    "command": "workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "alt+meta+6",
    "command": "-workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "ctrl+shift+7",
    "command": "workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "alt+meta+7",
    "command": "-workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "ctrl+shift+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "alt+meta+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+shift+4",
    "command": "workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "alt+meta+4",
    "command": "-workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "ctrl+shift+5",
    "command": "workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "alt+meta+5",
    "command": "-workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "ctrl+shift+numpad_subtract",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "shift+meta+p",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "ctrl+shift+numpad_add",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "shift+meta+o",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "alt+[Backslash]",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "[Backquote]",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "ctrl+[Backquote]",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+d ctrl+d",
    "command": "geeebe.duplicateText",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-geeebe.duplicateText",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+tab ctrl+shift+[Backquote]",
    "command": "aipopup.action.modal.generate",
    "when": "editorFocus"
  },
  //! added by me
  {
    "key": "ctrl+shift+a",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+q",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+z",
    "command": "workbench.action.toggleZenMode"
  },
  // FILE TREE
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+e"
  },
  {
    "command": "workbench.files.action.focusFilesExplorer",
    "key": "ctrl+e",
    "when": "editorTextFocus"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "fileutils.renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus"
  },
  {
    "key": "ctrl+shift+r",
    "command": "svelte.kit.generateMultipleFiles",
    "when": "explorerViewletFocus"
  },
  // {
  //     "key": "shift+n",
  //     "command": "workbench.action.newWindow",
  //     "when": "!explorerViewletFocus"
  // },
  {
    "command": "fileutils.removeFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "-aipopup.action.modal.generate",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+c ctrl+shift+c",
    "command": "turboConsoleLog.commentAllLogMessages"
  },
  {
    "key": "shift+alt+c",
    "command": "-turboConsoleLog.commentAllLogMessages"
  },
  {
    "key": "ctrl+shift+d ctrl+shift+a",
    "command": "turboConsoleLog.deleteAllLogMessages"
  },
  {
    "key": "shift+alt+d",
    "command": "-turboConsoleLog.deleteAllLogMessages"
  },
  {
    "key": "alt+u alt+u",
    "command": "turboConsoleLog.uncommentAllLogMessages"
  },
  {
    "key": "shift+alt+u",
    "command": "-turboConsoleLog.uncommentAllLogMessages"
  },
  {
    "key": "ctrl+shift+d ctrl+shift+l",
    "command": "turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+o ctrl+l",
    "command": "outline.focus"
  },
  {
    "key": "ctrl+l ctrl+o",
    "command": "outline.toggleVisibility"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+i",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "alt+g alt+s",
    "command": "gitlens.showQuickRepoStatus",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+s",
    "command": "-gitlens.showQuickRepoStatus",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "ctrl+d ctrl+s",
    "command": "codium.right_click_write_docstring"
  },
  {
    "key": "ctrl+q ctrl+g",
    "command": "chat-view.focus"
  },
  {
    "key": "ctrl+q ctrl+c",
    "command": "codium.rag.indexFolder"
  },
  // Focus on the sidebar with "H"
  {
    "key": "shift+l",
    "command": "workbench.view.explorer",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  // Focus back on the editor with "L"
  {
    "key": "shift+h",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus && vim.mode == 'Normal'"
  },
  // Move to the next item in the sidebar with "J"
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "sideBarFocus && vim.mode == 'Normal'"
  },
  // Move to the previous item in the sidebar with "K"
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "sideBarFocus && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+alt+i",
    "command": "-workbench.action.chat.open"
  },
  {
    "key": "shift+alt+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "alt+n",
    "command": "fileutils.newFileAtRoot"
  },
  {
    "key": "shift+alt+n",
    "command": "fileutils.newFolderAtRoot"
  },
  {
    "key": "shift+meta+s",
    "command": "isort-formatter.run",
    "when": "explorerResourceIsFolder || resourceLangId == 'python'"
  }
]