{
  "explorer.decorations.colors": false,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "workbench.colorTheme": "Min Dark",
  "editor.minimap.enabled": true,
  "editor.minimap.maxColumn": 70,
  "editor.minimap.autohide": true,
  "editor.minimap.scale": 2,
  "editor.minimap.renderCharacters": false,
  "editor.renderFinalNewline": "off",
  "editor.lineNumbers": "relative",
  "git.openRepositoryInParentFolders": "always",
  "git.enableSmartCommit": true,
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "prettier.printWidth": 80,
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "j",
        "j"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "leader",
        "e"
      ],
      "commands": [
        "workbench.action.toggleSidebarVisibility",
      ]
    },
    {
      "before": [
        "leader",
        "b",
        "d"
      ],
      "commands": [
        ":bdelete"
      ]
    },
    // ! navigate in buffers
    {
      "before": [
        "<S-h>"
      ],
      "commands": [
        ":bprevious"
      ]
    },
    {
      "before": [
        "<S-l>"
      ],
      "commands": [
        ":bnext"
      ]
    },
    //! split V and H
    {
      "before": [
        "leader",
        "v"
      ],
      "commands": [
        ":vsplit"
      ]
    },
    {
      "before": [
        "leader",
        "s"
      ],
      "commands": [
        ":split"
      ]
    },
    //! panes
    {
      "before": [
        "leader",
        "h"
      ],
      "commands": [
        "workbench.action.focusLeftGroup"
      ]
    },
    {
      "before": [
        "leader",
        "j"
      ],
      "commands": [
        "workbench.action.focusBelowGroup"
      ]
    },
    {
      "before": [
        "leader",
        "k"
      ],
      "commands": [
        "workbench.action.focusAboveGroup"
      ]
    },
    {
      "before": [
        "leader",
        "l"
      ],
      "commands": [
        "workbench.action.focusRightGroup"
      ]
    },
    //! some additions
    {
      "before": [
        "leader",
        "w"
      ],
      "commands": [
        ":w!"
      ]
    },
    {
      "before": [
        "leader",
        "q"
      ],
      "commands": [
        ":q!"
      ]
    },
    {
      "before": [
        "leader",
        "x"
      ],
      "commands": [
        ":x!"
      ]
    },
    {
      "before": [
        "<leader>",
        "c",
        "a"
      ],
      "commands": [
        "editor.action.quickFix"
      ]
    },
    {
      "before": [
        "leader",
        "f"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      "before": [
        "leader",
        "p"
      ],
      "commands": [
        "editor.action.formatDocument"
      ]
    },
    {
      "before": [
        "g",
        "h"
      ],
      "commands": [
        "editor.action.showDefinitionPreviewHover"
      ]
    },
    // ! leap search
    {
      "before": [
        "s"
      ],
      "commands": [
        "leap.find-forwards"
      ]
    },
    {
      "before": [
        "S"
      ],
      "commands": [
        "leap.find-backwards"
      ]
    },
    {
      "before": [
        "<C-n>"
      ],
      "commands": [
        ":nohl"
      ]
    },
    {
      "before": [
        "K"
      ],
      "commands": [
        "lineBreakInsert"
      ],
      "silent": true
    },
    {
      "before": [
        "s"
      ],
      "commands": [
        "leap.find-forwards"
      ]
    },
    {
      "before": [
        "S"
      ],
      "commands": [
        "leap.find-backwards"
      ]
    },
    {
      "before": [
        "j"
      ],
      "after": [
        "g",
        "j"
      ]
    },
    {
      "before": [
        "k"
      ],
      "after": [
        "g",
        "k"
      ]
    }
  ],
  "vim.visualModeKeyBindings": [
    // * Stay in visual mode while indenting
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    //* Move selected lines while staying in visual mode
    {
      "before": [
        "J"
      ],
      "commands": [
        "editor.action.moveLinesDownAction"
      ]
    },
    {
      "before": [
        "K"
      ],
      "commands": [
        "editor.action.moveLinesUpAction"
      ]
    },
    // toggle comment selection
    {
      "before": [
        "leader",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    }
  ],
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false
  },
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "[jsonc]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "editor.wordWrap": "wordWrapColumn",
  "editor.renderWhitespace": "trailing",
  "files.associations": {
    "**/*.html": "html",
    "**/templates/*/*.html": "django-html",
    "**/templates/*": "django-txt",
    "**/views/**/*.html": "django-html",
    "**/requirements{/**,*}.{txt,in}": "pip-requirements",
    "*.css": "tailwindcss",
    "*.html": "django-html"
  },
  "editor.quickSuggestions": {
    "strings": "on"
  },
  "beautify.language": {
    "html": [
      "htm",
      "html",
      "django-html"
    ]
  },
  "emmet.includeLanguages": {
    "django-html": "html"
  },
  "tailwind-fold.foldLengthThreshold": 25,
  "tailwind-fold.foldStyle": "QUOTES",
  "tailwind-fold.unfoldIfLineSelected": true,
  "[html]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "HookyQR.beautify"
  },
  "workbench.editor.wrapTabs": true,
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[django-html]": {
    "editor.defaultFormatter": "HookyQR.beautify"
  },
  "explorer.confirmDragAndDrop": false,
  "git.confirmSync": false,
  "git.autofetch": true,
  "workspaceExplorer.workspaceStorageDirectory": "/home/yeeloman/Documents/vsws",
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "liveServer.settings.donotShowInfoMsg": true,
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "diffEditor.ignoreTrimWhitespace": true
  },
  "tailwindCSS.emmetCompletions": true,
  "tailwindCSS.includeLanguages": {
    "html": "tailwind"
  },
  "workbench.sideBar.location": "right",
  "github.copilot.advanced": {
    "authProvider": "github"
  },
  "tailwind-fold.autoFold": true,
  "better-comments.multilineComments": true,
  "better-comments.highlightPlainText": true,
  "tailwind-fold.supportedLanguages": [
    "html",
    "typescriptreact",
    "javascriptreact",
    "typescript",
    "javascript",
    "vue-html",
    "vue",
    "php",
    "markdown",
    "coffeescript",
    "svelte",
    "astro",
    "erb",
    "django-html"
  ],
  "leaper.decorationOptions": {
    "backgroundColor": "#0000FF9E",
    "outlineColor": "editorBracketMatch.border",
    "outlineStyle": "outset",
    "outlineWidth": "1px",
    "fontWeight": "bolder",
    "light": {
      "backgroundColor": "#0000001A"
    }
  },
  "editor.linkedEditing": true,
  "workbench.editor.editorActionsLocation": "hidden",
  "workbench.editor.showTabs": "none",
  "codium.enable": true,
  "workbench.activityBar.location": "hidden",
  "window.menuBarVisibility": "toggle",
  "security.workspace.trust.untrustedFiles": "open",
  "workbench.startupEditor": "none",
  "errorLens.fontWeight": "200",
  "errorLens.fontStyleItalic": true,
  "editor.inlayHints.fontFamily": "Fira Code",
  "editor.fontFamily": "'Fira Code', 'Fira Code iScript'",
  "editor.fontLigatures": true,
  "editor.fontSize": 12,
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": [
          //following will be in italic (=FlottFlott)
          "comment",
          "entity.name.type.class", //class names
          "keyword", //import, export, return…
          "constant", //String, Number, Boolean…, this, super
          "storage.modifier", //static keyword
          "storage.type.class.js", //class keyword
        ],
        "settings": {
          "fontStyle": "italic",
        }
      },
      {
        "scope": [
          //following will be excluded from italics (VSCode has some defaults for italics)
          "invalid",
          "keyword.operator",
          "constant.numeric.css",
          "keyword.other.unit.px.css",
          "constant.numeric.decimal.js",
          "constant.numeric.json"
        ],
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  "explorer.confirmDelete": false,
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "editor.wordWrapColumn": 120,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb",
    "Cargo.toml": "Cargo.lock",
    "*.sqlite": "${capture}.${extname}-*",
    "*.db": "${capture}.${extname}-*",
    "*.sqlite3": "${capture}.${extname}-*",
    "*.db3": "${capture}.${extname}-*",
    "*.sdb": "${capture}.${extname}-*",
    "*.s3db": "${capture}.${extname}-*"
  },
  "[svelte]": {
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "svelte.enable-ts-plugin": true,
  "security.promptForLocalFileProtocolHandling": false,
  "[dockercompose]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  }
}